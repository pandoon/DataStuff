	#Imports
import math
import numpy as np
import h5py
import matplotlib.pyplot as plt
from matplotlib.pyplot import imread
import scipy
from PIL import Image
import pandas as pd
import tensorflow as tf
import tensorflow.keras.layers as tfl
from tensorflow.python.framework import ops
from cnn_utils import *
from test_utils import summary, comparator

%matplotlib inline
np.random.seed(1)

	#Loading Data
X_train_orig, Y_train_orig, X_test_orig, Y_test_orig, classes = load_signs_dataset()

	#Train Test Split
X_train = X_train_orig/255.
X_test = X_test_orig/255.
Y_train = convert_to_one_hot(Y_train_orig, 6).T
Y_test = convert_to_one_hot(Y_test_orig, 6).T

	#Building the Model
def convolutional_model(input_shape):

    input_img = tf.keras.Input(shape=input_shape)

    Z1 = tfl.Conv2D(filters = 8, kernel_size = 4, padding = 'same', strides = 1)(input_img)
    A1 = tfl.ReLU()(Z1)
    P1 = tfl.MaxPool2D(pool_size = 8, padding = 'same', strides = 8)(A1)
    Z2 = tfl.Conv2D(filters = 16, kernel_size = 2, padding = 'same', strides = 1)(P1)
    A2 = tfl.ReLU()(Z2)
    P2 = tfl.MaxPool2D(pool_size = 4, padding = 'same', strides = 4)(A2)
    F = tfl.Flatten()(P2)
    outputs = tfl.Dense(6, activation = 'softmax')(F)

    model = tf.keras.Model(inputs=input_img, outputs=outputs)
    return model

	#Training the Model
train_dataset = tf.data.Dataset.from_tensor_slices((X_train, Y_train)).batch(64)
test_dataset = tf.data.Dataset.from_tensor_slices((X_test, Y_test)).batch(64)
history = conv_model.fit(train_dataset, epochs=100, validation_data=test_dataset)

	#Visualising Loss Data
df_loss_acc = pd.DataFrame(history.history)
df_loss= df_loss_acc[['loss','val_loss']]
df_loss.rename(columns={'loss':'train','val_loss':'validation'},inplace=True)
df_acc= df_loss_acc[['accuracy','val_accuracy']]
df_acc.rename(columns={'accuracy':'train','val_accuracy':'validation'},inplace=True)
df_loss.plot(title='Model loss',figsize=(12,8)).set(xlabel='Epoch',ylabel='Loss')
df_acc.plot(title='Model Accuracy',figsize=(12,8)).set(xlabel='Epoch',ylabel='Accuracy')
